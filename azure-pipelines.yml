trigger: #  pipeline will auto run when any changes to the master branch are made
- master

# using ubuntu latest vmImage
pool:
  vmImage: 'ubuntu-latest'

pr: 'none'

#  For the operations related to sonar cloud to function properly
#  they must all be in the same job
#  The general order that they must follow is
#   - SonarCloudPrepare
#   - Build project
#   - Run test (generating code coverage at the same time)
#   - SonarCloudAnalyze
#   - SonarCloudPublish

stages:
  - stage:
    jobs:
      - job: 'build'
        steps:
          #  This task is the SonarCloudPrepare task.
          #  It is used to configure the SonarCloud service
          - task: SonarCloudPrepare@1
            inputs:
              SonarCloud: 'SonarProj2'
              organization: 'testkey123456'
              scannerMode: 'MSBuild'
              projectKey: '8edee758f0a39aafeb0905280fc6e4cdf5fff415'
              projectName: 'testDevOpsPipeline'
              extraProperties: |
                sonar.exclusions=**/obj/**,**/*.dll
                sonar.branch.name=$(Build.SourceBranchName)
                sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/**/coverage.opencover.xml
                sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)/*.trx
          
          - script: dotnet build 'Project2\MusicShop.sln'
            displayName: 'Build'

          - task: DotNetCoreCLI@2
            displayName: 'Run Tests $(BuildConfiguration)' 
            inputs:
              command: test
              arguments: '--configuration $(BuildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --logger trx'
              projects: 'Project2/**/MusicShop.Tests.csproj'
              nobuild: true
          
          - script: |
              dotnet tool install -g dotnet-reportgenerator-globaltool
            displayName: installs reportgenerator

          
          - task: DotNetCoreCLI@2
            displayName: 'Sets reportgenerator'
            inputs: 
              command: restore
              projects: 'Project2/**/MusicShop.Tests.csproj'
          # - script: |
          #     workingDirectory:
          #     echo "##vso[task.prependpath]$HOME/.dotnet/tools"

          
          - task: DotNetCoreCLI@2
          - script: |
              dotnet restore 'Project2\MusicShop.sln'
              reportgenerator -reports:Project2/**/MusicShop.Tests/**/coverage.opencover.xml -targetdir:Project2/**/MusicShop.Tests/CodeCoverage "-reporttypes:HtmlInline_AzurePipelines;Cobertura"
            displayName: 'Generates report'
